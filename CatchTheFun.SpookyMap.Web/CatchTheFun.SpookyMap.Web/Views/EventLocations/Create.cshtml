@model CatchTheFun.SpookyMap.Web.Models.EventLocation

@{
    ViewData["Title"] = "Register your house";
    var apiKey = ViewData["GoogleMapsApiKey"];
}

<h1>Add your house for trick-or-treaters!</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" id="autocomplete" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label for="photo" class="form-label">Photo</label>
                <input type="file" id="photo" name="photo" accept="image/*" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="SomethingElse" class="control-label"></label>
                <select asp-for="SomethingElse" class="form-control">
                    <option value="" selected disabled>Answer</option>
                    <option value="true">Yes</option>
                    <option value="false">No</option>
                </select>
                <span asp-validation-for="SomethingElse" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="StartTime" class="form-label">Start Time</label>
                <input type="time" class="form-control" asp-for="StartTime" />
            </div>
            <div class="mb-3">
                <label asp-for="EndTime" class="form-label">End Time</label>
                <input type="time" class="form-control" asp-for="EndTime" />
            </div>
            <div class="d-flex gap-2">
                <input type="submit" value="Create" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-left"></i> Back to List
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    @if (string.IsNullOrEmpty(apiKey?.ToString()))
    {
        <script>
            alert("Google Maps API key is missing. Address autocomplete will not work.");
        </script>
    }
    else
    {
        <script>
            function initAutocomplete() {
                const input = document.getElementById('autocomplete');
                const options = {
                    componentRestrictions: { country: "us" },
                    fields: ["formatted_address", "geometry"],
                    types: ["address"]
                };
                const autocomplete = new google.maps.places.Autocomplete(input, options);
                const tacomaBounds = new google.maps.LatLngBounds(
                    { lat: 47.2, lng: -122.6 },
                    { lat: 47.3, lng: -122.3 }
                );
                autocomplete.setBounds(tacomaBounds);
                autocomplete.setOptions({ strictBounds: true });
            }

        </script>

        <script src="https://maps.googleapis.com/maps/api/js?key=@ViewData["GoogleMapsApiKey"]&libraries=places&callback=initAutocomplete&language=en"
                async defer></script>

    }
}

